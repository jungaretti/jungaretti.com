---
import type { Metadata } from "@lib/Metadata";
import type { Park } from "@lib/Park";
import BaseLayout from "@layouts/BaseLayout.astro";
import Section from "@components/Section.astro";
import Progress from "@components/Progress.astro";

interface Props {
  meta: Metadata;
  scope: string;
  parks: (Park & { category: string })[];
}
const { meta, scope, parks } = Astro.props;

const visited = parks.filter((park) => park.visited);
const toVisit = parks.filter((park) => !park.visited);
const all = [...visited, ...toVisit];
all.sort((a, b) => a.name.localeCompare(b.name));
---

<BaseLayout meta={meta}>
  <Section title={`${scope} Parks`}>
    <div class="mb-3">
      <Progress
        value={visited.length}
        total={all.length}
        valueDetail={`${visited.length} visited`}
        totalDetail={`${all.length} total`}
      />
    </div>
    <div class="grid grid-cols-1 gap-3 md:grid-cols-3">
      {
        parks.map((park) => (
          <div class="flex flex-row items-center gap-3">
            <div>
              <p class="text-lg">{park.visited ? "‚úÖ" : "üìç"}</p>
            </div>
            <div>
              <p class="text-lg font-bold">{park.name}</p>
              <p>
                {park.visited
                  ? `Visited ${park.visited.toLocaleString("en-US", {
                      month: "short",
                      year: "numeric",
                    })}, ${park.location}`
                  : park.location}
              </p>
            </div>
          </div>
        ))
      }
    </div>
  </Section>
</BaseLayout>
