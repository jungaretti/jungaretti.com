---
import type { Metadata } from "../lib/Metadata";
import { cardDetail, Park } from "../lib/Park";
import { categoryColor } from "../lib/CardColor";
import BaseLayout from "@layouts/BaseLayout.astro";
import Section from "@components/Section.astro";
import Card from "@components/Card.astro";
import Progress from "@components/Progress.astro";

interface Props {
  meta: Metadata;
  scope: string;
  parks: (Park & { category: string })[];
}
const { meta, scope, parks } = Astro.props;

const visited = parks.filter((park) => park.visited);
visited.sort((a, b) => b.visited!.valueOf() - a.visited!.valueOf());
const toVisit = parks.filter((park) => !park.visited);
toVisit.sort((a, b) => a.category.localeCompare(b.category));
const all = [...visited, ...toVisit];
---

<BaseLayout meta={meta}>
  <Section title={`${scope} Parks`}>
    <div class="mb-3">
      <Progress
        value={visited.length}
        total={all.length}
        valueDetail={`${visited.length} visited`}
        totalDetail={`${all.length} total`}
      />
    </div>
    <div class="flex flex-col sm:flex-row sm:flex-wrap gap-2">
      {
        all.map((park) => (
          <div class="sm:flex-grow">
            <Card
              title={park.name}
              detail={cardDetail(park)}
              color={categoryColor(park.category)}
              outline={park.visited === undefined}
            />
          </div>
        ))
      }
    </div>
  </Section>
</BaseLayout>
